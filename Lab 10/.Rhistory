knitr::opts_chunk$set(echo = TRUE)
install.packages("stats19")
library('stats19')
library('dplyr')
library('randomForest')
mydata=read_csv("Seeds.csv")
mydata = read.csv("Seeds.csv")
View(mydata)
str(mydata)
index=sample(2,nrow(mydata), replace=TRUE,prob=c(0.7,0.3))
training=mydata[index==1,]
testing=mydata[index==2,]
RFM <- randomForest(seedType ~ .,data=training, importance=T, proximity=T)
Species_Pred=predict(RFM,testing)
testing$Species_Pred=Species_Pred
View(testing)
CFM=table(testing$Species,testing$Species_Pred)
CFM
CFM=table(testing$seedType,testing$Species_Pred)
CFM
mydata$seedType = as.factor(mydata$seedType)
index=sample(2,nrow(mydata), replace=TRUE,prob=c(0.7,0.3))
training=mydata[index==1,]
testing=mydata[index==2,]
mydata = read.csv("Seeds.csv")
View(mydata)
str(mydata)
mydata$seedType = as.factor(mydata$seedType)
index=sample(2,nrow(mydata), replace=TRUE,prob=c(0.7,0.3))
training=mydata[index==1,]
testing=mydata[index==2,]
RFM <- randomForest(seedType ~ .,data=training, importance=T, proximity=T)
Species_Pred=predict(RFM,testing)
testing$Species_Pred=Species_Pred
View(testing)
CFM=table(testing$seedType,testing$Species_Pred)
CFM
knitr::opts_chunk$set(echo = TRUE)
acc = sum(diag(CFM))/sum(CFM)*100
acc
library('stats19')
library('dplyr')
library('randomForest')
mydata = read.csv("Seeds.csv")
str(mydata)
mydata$seedType = as.factor(mydata$seedType)
index=sample(2,nrow(mydata), replace=TRUE,prob=c(0.7,0.3))
training=mydata[index==1,]
testing=mydata[index==2,]
RFM <- randomForest(seedType ~ .,data=training, importance=T, proximity=T)
Species_Pred=predict(RFM,testing)
testing$Species_Pred=Species_Pred
head(testing)
CFM=table(testing$seedType,testing$Species_Pred)
CFM
acc = sum(diag(CFM))/sum(CFM)*100
acc
acc = sum(diag(CFM))/sum(CFM)*100
acc
crabs=crabs
library(MASS)
crabs <- crabs
View(crabs)
str(crabs)
CFM
index=sample(2,nrow(crabs), replace=TRUE,prob=c(0.7,0.3))
training=crabs[index==1,]
testing=crabs[index==2,]
RFM <- randomForest(sp ~ .,data=training, importance=T, proximity=T)
Species_Pred = predict(RFM, testing)
testing$Species_Pred=Species_Pred
CFM = table(testing$Species,testing$Species_Pred)
CFM
index=sample(2,nrow(crabs), replace=TRUE,prob=c(0.6,0.4))
training=crabs[index==1,]
testing=crabs[index==2,]
RFM <- randomForest(sp ~ .,data=training, importance=T, proximity=T)
Species_Pred = predict(RFM, testing)
testing$Species_Pred=Species_Pred
CFM = table(testing$Species,testing$Species_Pred)
CFM
index=sample(2,nrow(crabs), replace=TRUE,prob=c(0.5,0.5))
training=crabs[index==1,]
testing=crabs[index==2,]
RFM <- randomForest(sp ~ .,data=training, importance=T, proximity=T)
Species_Pred = predict(RFM, testing)
testing$Species_Pred=Species_Pred
CFM = table(testing$Species,testing$Species_Pred)
CFM
index=sample(2,nrow(crabs), replace=TRUE,prob=c(0.5,0.5))
training=crabs[index==1,]
testing=crabs[index==2,]
RFM <- randomForest(sp ~ .,data=training, importance=T, proximity=T)
Species_Pred = predict(RFM, testing)
testing$Species_Pred=Species_Pred
CFM = table(testing$Species,testing$Species_Pred)
CFM
index=sample(2,nrow(crabs), replace=TRUE,prob=c(0.5,0.5))
training=crabs[index==1,]
testing=crabs[index==2,]
RFM <- randomForest(sp ~ .,data=training, importance=T, proximity=T)
Species_Pred = predict(RFM, testing)
testing$Species_Pred=Species_Pred
CFM = table(testing$Species,testing$Species_Pred)
CFM
index=sample(2,nrow(crabs), replace=TRUE,prob=c(0.5,0.5))
training=crabs[index==1,]
testing=crabs[index==2,]
RFM <- randomForest(sp ~ .,data=training, importance=T, proximity=T)
Species_Pred = predict(RFM, testing)
testing$Species_Pred=Species_Pred
CFM = table(testing$Species,testing$Species_Pred)
CFM
index=sample(2,nrow(crabs), replace=TRUE,prob=c(0.5,0.5))
training=crabs[index==1,]
testing=crabs[index==2,]
RFM <- randomForest(sp ~ .,data=training, importance=T, proximity=T)
Species_Pred = predict(RFM, testing)
testing$Species_Pred=Species_Pred
CFM = table(testing$Species,testing$Species_Pred)
CFM
index=sample(2,nrow(crabs),replace=TRUE,prob=c(0.75,0.25))
training=crabs[index==1,]
testing=crabs[index==2,]
RFM <- randomForest(admit~.,data=training,importance=T,proximity=T)
index=sample(2,nrow(crabs),replace=TRUE,prob=c(0.75,0.25))
training=crabs[index==1,]
testing=crabs[index==2,]
RFM <- randomForest(sp~.,data=training,importance=T,proximity=T)
Admit_Pred=predict(RFM,testing)
testing$Admit_Pred=Admit_Pred
CFM = table(testing$Species,testing$Species_Pred)
CFM
index=sample(2,nrow(crabs),replace=TRUE,prob=c(0.75,0.25))
training=crabs[index==1,]
testing=crabs[index==2,]
RFM <- randomForest(sp~.,data=training,importance=T,proximity=T)
Admit_Pred=predict(RFM,testing)
testing$Admit_Pred=Admit_Pred
CFM = table(testing$sp,testing$Admit_Pred)
CFM
index=sample(2,nrow(crabs), replace=TRUE,prob=c(0.5,0.5))
training=crabs[index==1,]
testing=crabs[index==2,]
RFM <- randomForest(sp ~ .,data=training, importance=T, proximity=T)
Species_Pred = predict(RFM, testing)
testing$Species_Pred=Species_Pred
CFM = table(testing$sp,testing$Species_Pred)
CFM
acc = sum(diag(CFM))/sum(CFM)*100
acc
# confusion matrix
CFM = table(testing$sp,testing$Species_Pred)
CFM
# accuracy
acc = sum(diag(CFM))/sum(CFM)*100
acc
